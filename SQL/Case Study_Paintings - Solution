SELECT * from artist; -- 421
SELECT * from canvas_size;  -- 200
SELECT * from image_link;  -- 14,775
SELECT * from museum_hours;  -- 351
SELECT * from museum;  -- 57
SELECT * from product_size;  -- 110,347
SELECT * from subject;  -- 6,771
SELECT * from work;  -- 14,776


-- 1.) Fetch all the paintings which are not displayed on any museums?
SELECT *
FROM work
WHERE museum_id IS NULL;


-- 2.) Are there museums without any paintings?
SELECT *
FROM museum as m
LEFT JOIN work as w
ON m.museum_id=w.museum_id
WHERE w.work_id IS NULL;


-- 3.) How many paintings have an asking price of more than their regular price?
SELECT *
FROM product_size
WHERE sale_price > regular_price;


-- 4.) Identify the paintings whose asking price is less than 50% of its regular price
SELECT *
FROM product_size
WHERE sale_price < (regular_price*0.5);


-- 5.) Which canva size costs the most?
SELECT TOP 1
cs.label, pd.sale_price
FROM canvas_size as cs
JOIN product_size as pd
ON cs.size_id=pd.size_id
GROUP BY cs.label, pd.sale_price
ORDER BY MAX(pd.sale_price) DESC;


-- 10.) Identify the museums which are open on both Sunday and Monday. Display museum name, city.
SELECT m.name as museum_name, m.city
from museum_hours mh1
join museum m on m.museum_id = mh1.museum_id
WHERE day = 'Sunday' 
and exists (select 1 from museum_hours mh2
			where mh2.museum_id = mh1.museum_id
			and mh2.day = 'Monday');


-- 15.) Which museum is open for the longest during a day. Dispay museum name, state and hours open and which day?
SELECT TOP 1
m.name as museum_name, m.state, mh.day,
DATEDIFF(minute, open_time, close_time) as duration_min,
RANK() OVER (ORDER BY DATEDIFF(minute, open_time, close_time)/60 DESC) as duration_hr_rank
from museum_hours mh
JOIN museum m on m.museum_id=mh.museum_id
ORDER BY duration_hr_rank;

EXEC sp_rename 'museum_hours.open', 'open_time';  -- rename the open time
EXEC sp_rename 'museum_hours.close', 'close_time';  -- rename the closing time


-- 18.) Display the country and the city with most no of museums. Output 2 seperate columns to mention the city and country. If there are multiple value, seperate them with comma.
WITH cte_country as
	(SELECT country, count(1) as country_count,
	rank () over (ORDER BY COUNT(1) DESC) as country_rank
	FROM museum
	GROUP BY country),
	cte_city as
	   (SELECT city, count(1) as city_count,
	   rank () over (ORDER BY COUNT(1) DESC) as city_rank
		FROM museum
		GROUP BY city)
SELECT string_agg(DISTINCT country, ', ') as country,
	string_agg(city, ', ') as city
FROM cte_country
CROSS JOIN cte_city
WHERE cte_country.country_rank = 1
AND cte_city.city_rank = 1;
